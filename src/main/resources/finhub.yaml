openapi: 3.0.3
info:
  description: The following APIs have been designed to support the retrieval of customer top spending based on clusters.
  version: 1.0.0
  title: Fin Hub API Documentation
servers:
  - url: https://api.finhub.com
tags:
  - name: finHub - External
    description: Customer Top Spending Model
  - name: finHub - Internal
    description: Retrive Customer Cluster Details
paths:
  /insights/v1/user-categories:
    post:
      tags:
        - finHub - External
      summary: Retirve User top categories from cluster for the given customer id and Period.
      operationId: userCategoriesAPI
      parameters:
        - name: Authorization
          in: header
          description: Authorisation Token
          required: true
          schema:
            type: string
        - name: x-fapi-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: false
          schema:
            $ref: '#/components/headers/fapiInteractionId'
      requestBody:
        $ref: '#/components/requestBodies/userCategoriesRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/userCategoriesResponseBody'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorised'
        '403':
          $ref: '#/components/responses/forbidden'
        '405':
          $ref: '#/components/responses/methodNotSupported'
        '406':
          $ref: '#/components/responses/contentTypeNotSupported'
        '422':
          $ref: '#/components/responses/unprocessableEntity'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServerError'
  /insights/v1/user-suggestions:
    post:
      tags:
        - finHub - External
      summary: Retrive user suggestions for the given category and customers ids
      operationId: userSuggestionsAPI
      parameters:
        - name: Authorization
          in: header
          description: Authorisation Token
          required: true
          schema:
            type: string
        - name: x-fapi-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: false
          schema:
            $ref: '#/components/headers/fapiInteractionId'
      requestBody:
        $ref: '#/components/requestBodies/userSuggestionsRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/userSuggestionsResponseBody'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorised'
        '403':
          $ref: '#/components/responses/forbidden'
        '405':
          $ref: '#/components/responses/methodNotSupported'
        '406':
          $ref: '#/components/responses/contentTypeNotSupported'
        '422':
          $ref: '#/components/responses/unprocessableEntity'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServerError'
  
  /insights/v1.0/customer-segment:
    post:
      tags:
        - finHub - Internal
      summary: Retrive user cluster Info
      operationId: userClusterAPI
      parameters:
        - name: Authorization
          in: header
          description: Authorisation Token
          required: true
          schema:
            type: string
        - name: x-fapi-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: false
          schema:
            $ref: '#/components/headers/fapiInteractionId'
      requestBody:
        $ref: '#/components/requestBodies/userClusterRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/userClusterResponseBody'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorised'
        '403':
          $ref: '#/components/responses/forbidden'
        '405':
          $ref: '#/components/responses/methodNotSupported'
        '406':
          $ref: '#/components/responses/contentTypeNotSupported'
        '422':
          $ref: '#/components/responses/unprocessableEntity'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServerError'        
components:
  headers:
    fapiInteractionId:
      description: Identifer used for tracing of request. Supplied by the client and echoed back by the server, or generated by the server if omitted.
      schema:
        type: string
    rbsInteractionId:
      description: Identifer used for tracing of request. Supplied by the the server
      schema:
        type: string
  requestBodies:
    userSuggestionsRequestBody:
      description: Request body for user suggestions request.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/components/schemas/userSuggestionsRequest'
            additionalProperties: false
    userCategoriesRequestBody:
      description: Request body for user categories.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/components/schemas/userCategoriesRequest'
            additionalProperties: false
    userClusterRequestBody:
      description: Request body for Seaching Address Request.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/components/schemas/userClusterRequest'
            additionalProperties: false      
  responses:
    userSuggestionsResponseBody:
      description: Recurring entities found through query criteria
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/userSuggestionsResponse'
                required:
                  - data
                additionalProperties: false
    userCategoriesResponseBody:
      description: Recurring entities found through query criteria
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/userCategoriesResponse'
                required:
                  - data
                additionalProperties: false
    userClusterResponseBody:
      description: Recurring entities found through query criteria
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/userClusterResponse'
                required:
                  - data
                additionalProperties: false            
    badRequest:
      description: Bad request. One-or-more request parameters are invalid
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/fapiInteractionId'
        x-rbs-interaction-id:
          $ref: '#/components/headers/rbsInteractionId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    unauthorised:
      description: Zero or invalid credentials sent
    forbidden:
      description: Client does not have permission to invoke operation
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/fapiInteractionId'
        x-rbs-interaction-id:
          $ref: '#/components/headers/rbsInteractionId'
    methodNotSupported:
      description: Client has requested a method not supported by the operation
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/fapiInteractionId'
        x-rbs-interaction-id:
          $ref: '#/components/headers/rbsInteractionId'
    contentTypeNotSupported:
      description: Client has requested a content type not supported by the operation
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/fapiInteractionId'
        x-rbs-interaction-id:
          $ref: '#/components/headers/rbsInteractionId'
    unsupportedMediaType:
      description: Client has sent a request body encoded in a format the server cannot process
    unprocessableEntity:
      description: Operation failed due to unprocessable request
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/fapiInteractionId'
        x-rbs-interaction-id:
          $ref: '#/components/headers/rbsInteractionId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    tooManyRequests:
      description: Operation failed due client exceed their quota or rate limit
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/fapiInteractionId'
        x-rbs-interaction-id:
          $ref: '#/components/headers/rbsInteractionId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    internalServerError:
      description: Internal Server Error
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/fapiInteractionId'
        x-rbs-interaction-id:
          $ref: '#/components/headers/rbsInteractionId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
  schemas:
    userCategoriesRequest:
      type: object
      description: Address Request
      properties:
        customerId:
          $ref: '#/components/schemas/customerId'
        period:
          type: string
          description: 'Period for user top categories ..' 
          example: '2024-04'
        customerInfo:
          $ref: '#/components/schemas/customerInfo'
      required:
        - customerId
        - period
      additionalProperties: false
    userCategoriesResponse:
      type: object
      properties:
        period:
          type: string
          description: 'Period for user top categories ..' 
          example: '2024-04'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/categoriesResponse'  
      required:
        - period
        - averageSpend 
      additionalProperties: false  
    userSuggestionsRequest:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/customerId'
        period:
          type: string
          description: 'Period for user top categories ..' 
          example: '2024-04'
        categoryId:
          type: string
          description: 'type of category suggestion required ..' 
          example: 'category:bills'
      required:
         - customerId
         - period
         - categoryId
      additionalProperties: false
    userClusterRequest:
          $ref: '#/components/schemas/customerInfo'
    userSuggestionsResponse:
      type: object
      properties:
        period:
          type: string
          description: 'Period for user top categories ..' 
          example: '2024-04'
        noOfTransactions:
          type: number
          description: 'no of transactions in one category ..' 
          example: 10
        topMerchant:
          $ref: '#/components/schemas/topMerchantResponse'
        suggestions:
          type: array
          items:
            $ref: '#/components/schemas/suggestionsResponse'
      required:
         - noOfTransactions
         - period
         - suggestions
         - topMerchant
      additionalProperties: false
    userClusterResponse:
      type: object
      properties:
        clusterId:
          type: string
          description: 'Id of the Cluster' 
          example: 'cluster-id-011'
      additionalProperties: false  
    customerId:
          type: string
          description: 'Identification of the cusomter' 
          example: '1234567890'
    suggestionsResponse:
      type: object
      properties:
        url:
          type: string
          description: 'Address URI' 
          example: 'https://www.natwest.com/current-accounts/existing-customers/tastecard.html'
        description:
          type: string
          description: 'suggestion description' 
          example: '20%  discount \n Multi Use'  
        cashbackAmout:
          type: number
          description: 'cash back amount' 
          example: 100
      additionalProperties: false
    topMerchantResponse:
      type: object
      properties:
        merchantId:
          type: string
          description: 'Merchant Id' 
          example: "merchant-1"
        merchantName:
          type: string
          description: 'Name of the Merchant' 
          example: "Tesco"
        merchantTotalAmount:
          type: number
          description: 'total amount of the merchant'
          example: 1000.20
      additionalProperties: false
    categoriesResponse:
      type: object
      properties:
        categoryId:
          type: string
          description: 'Id for the category' 
          example: "category:bills"
        customerSpend:
          type: number
          description: 'total customer amounti in the category' 
          example: 500.00
        clusterAvgAmount:
          type: number
          description: 'total averange clustomer amount in the category' 
          example: 6000.00
      additionalProperties: false    
    customerInfo:
      type: object
      properties:
        postCode:
          type: string
          description: 'Cutomer Address Postcode' 
          example: "E71AA"
        age:
          type: number
          description: 'age of the customer' 
          example: 30
        profession:
          type: string
          description: 'Cutomer Profession' 
          example: "Software Engineer"
        totalIncome:
          type: number
          example: 100000.02
        noOfDependents:
          type: number
          description: 'no of dependents on customer' 
          example: 1
        noOfChildren:
          type: number
          description: 'no of children customer have' 
          example: 1
        highNetworthIndicator:
          type: boolean
          description: 'High Networth Indicator' 
          example:  NO 
        martialStatus:
          type: string
          enum: [Married, Single]
          description: 'Cutomer Martial Status' 
          example: "Married"
      additionalProperties: false   
    jsonApiSelfLink:
      type: object
      required:
        - links
      properties:
        links:
          required:
            - self
          properties:
            self:
              description: URL including query parameters that resulted in the response
              type: string
              example: https://api.natwest.com/example/v1/examples/0be8b4b780e
    getCollectionJsonApi:
      allOf:
        - $ref: '#/components/schemas/jsonApiSelfLink'
        - type: object
          required:
            - meta
          properties:
            meta:
              type: object
              properties:
                totalPages:
                  description: Total number of pages available in result set
                  type: integer
                recordsPerPage:
                  description: Number of records per page
                  type: integer
    errorProperties:
      type: object
      properties:
        errorCode:
          description: Low level textual error code
          type: string
        message:
          description: A description of the error that occurred. e.g., 'A mandatory field isn not supplied'
          type: string
          minLength: 1
          maxLength: 500
      required:
        - errorCode
        - message
      additionalProperties: false
    error:
      description: An array of detail error codes, and messages, and URLs to documentation to help remediation.
      type: object
      properties:
        code:
          description: High level textual error code, to help categorize the errors.
          type: string
          minLength: 1
          maxLength: 40
        id:
          description: A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.
          type: string
          minLength: 1
          maxLength: 40
        message:
          description: Brief Error message, e.g., 'There is something wrong with the request parameters provided'
          type: string
          minLength: 1
          maxLength: 500
        errors:
          items:
            $ref: '#/components/schemas/errorProperties'
          type: array
      required:
        - code
        - message
      additionalProperties: false
    errorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/error'
      required:
        - error
      additionalProperties: false